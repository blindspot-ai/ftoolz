# Stubs for cytoolz.functoolz (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Callable, Iterator, TypeVar
from ._pipe import *

_T = TypeVar('_T')
_T1 = TypeVar('_T1')

compose: Any
dedent: Any


def do(func: Callable[[_T], _T1], x: _T) -> _T: ...


flip: Any
has_keywords: Any
has_varargs: Any
identity: Any
import_module: Any
inspect: Any
instanceproperty: Any
is_arity: Any
is_partial_args: Any
is_valid_args: Any
juxt: Any
memoize: Any
no_default: str
num_required_args: Any
return_none: Any
thread_first: Any
thread_last: Any


def reduce(*args: Any, **kwargs: Any) -> Any: ...


class complement:
    __reduce__: Any = ...

    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

    def __call__(self, *args: Any, **kwargs: Any) -> Any: ...


class curry:
    _has_unknown_args: Any = ...
    _should_curry: Any = ...
    _should_curry_internal: Any = ...
    _sigspec: Any = ...
    args: Any = ...
    bind: Any = ...
    call: Any = ...
    func: Any = ...
    keywords: Any = ...
    __name__: Any = ...
    __qualname__: Any = ...
    __reduce__: Any = ...
    __signature__: Any = ...

    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

    def __call__(self, *args: Any, **kwargs: Any) -> Any: ...

    def __eq__(self, other: Any) -> Any: ...

    def __ge__(self, other: Any) -> Any: ...

    def __get__(self, *args: Any, **kwargs: Any) -> Any: ...

    def __gt__(self, other: Any) -> Any: ...

    def __hash__(self) -> Any: ...

    def __le__(self, other: Any) -> Any: ...

    def __lt__(self, other: Any) -> Any: ...

    def __ne__(self, other: Any) -> Any: ...


class excepts:
    exc: Any = ...
    func: Any = ...
    handler: Any = ...
    __name__: Any = ...

    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

    def __call__(self, *args: Any, **kwargs: Any) -> Any: ...

    def __reduce__(self) -> Any: ...

    def __setstate__(self, state: Any) -> Any: ...


class ifilter:

    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

    def __iter__(self) -> Iterator: ...

    def __next__(self) -> Any: ...

    def __reduce__(self) -> Any: ...


class imap:

    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

    def __iter__(self) -> Iterator: ...

    def __next__(self) -> Any: ...

    def __reduce__(self) -> Any: ...


class partial:
    args: Any = ...
    func: Any = ...
    keywords: Any = ...

    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

    def __call__(self, *args: Any, **kwargs: Any) -> Any: ...

    def __delattr__(self, name: Any) -> Any: ...

    def __reduce__(self) -> Any: ...

    def __setattr__(self, name: Any, value: Any) -> Any: ...

    def __setstate__(self, state: Any) -> Any: ...
